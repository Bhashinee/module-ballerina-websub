/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id "com.github.spotbugs" version "4.0.5"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "de.undercouch.download" version "4.0.4"
    id 'maven-publish'
}

ext.ballerinaLangVersion = project.ballerinaLangVersion
ext.puppycrawlCheckstyleVersion = project.puppycrawlCheckstyleVersion
ext.slf4jVersion = project.slf4jVersion
ext.ballerinaTomlParserVersion = project.ballerinaTomlParserVersion
ext.nettyVersion = project.nettyVersion
ext.nettyTcnativeVersion = project.nettyTcnativeVersion
ext.wso2TransportHttpNettyVersion = project.wso2TransportHttpNettyVersion
ext.ballerinaMessageBrokerVersion = project.ballerinaMessageBrokerVersion
ext.ballerinaMessageBrokerCoreVersion = project.ballerinaMessageBrokerCoreVersion
ext.wso2CommonsPoolVersion = project.wso2CommonsPoolVersion
ext.wso2SnakeYamlVersion = project.wso2SnakeYamlVersion
ext.bouncycastleVersion = project.bouncycastleVersion
ext.guavaVersion = project.guavaVersion
ext.wso2CarbonMetricsVersion = project.wso2CarbonMetricsVersion
ext.stdlibEncodingVersion = project.stdlibEncodingVersion

allprojects {
    group = project.group
    version = project.version

    apply plugin: 'jacoco'

    repositories {
        mavenLocal()
        maven {
            url = 'https://mvnrepository.com/artifact/io.ballerina.messaging/broker-core'
        }

        maven {
            url = 'https://maven.wso2.org/nexus/content/repositories/releases/'
        }

        maven {
            url = 'https://maven.wso2.org/nexus/content/repositories/snapshots/'
        }

        maven {
            url = 'https://maven.wso2.org/nexus/content/groups/wso2-public/'
        }

        maven {
            url = 'https://maven.wso2.org/nexus/content/repositories/orgballerinalang-1509'
        }

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }

        maven {
            url = 'https://mvnrepository.com/artifact/io.ballerina.messaging/broker-common'
        }

        maven {
            url "https://maven.pkg.github.com/ballerina-platform/module-ballerina-encoding"
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
    }
}

subprojects {
    apply plugin: 'java'

    configurations {
        ballerinaStdLibs
    }
    dependencies {
        /* Standard libraries */
        ballerinaStdLibs "org.ballerinalang:encoding-ballerina:${stdlibEncodingVersion}"
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/coverage-reports/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled = true
        xml.destination = new File("${buildDir}/reports/jacoco/report.xml")
        html.destination = new File("${buildDir}/reports/jacoco/report.html")
        csv.destination = new File("${buildDir}/reports/jacoco/report.csv")
    }

    onlyIf = {
        true
    }
}
